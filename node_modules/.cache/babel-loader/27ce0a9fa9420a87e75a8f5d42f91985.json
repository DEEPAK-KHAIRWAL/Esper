{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak.Khairwal\\\\HD\\\\LENOVO\\\\WEBSITES\\\\React\\\\confusion\\\\src\\\\components\\\\CommentForm.js\";\nimport React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log('Current State is: ' + JSON.stringify(values));\n    alert('Current State is: ' + JSON.stringify(values)); // event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"firstname\",\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".firstname\",\n      id: \"firstname\",\n      name: \"firstname\",\n      placeholder: \"First Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".firstname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/Deepak.Khairwal/HD/LENOVO/WEBSITES/React/confusion/src/components/CommentForm.js"],"names":["React","Component","Modal","ModalHeader","ModalBody","Row","Col","Label","Control","LocalForm","Errors","CommentForm","constructor","props","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","console","log","JSON","stringify","alert","render","required","minLength","maxLength"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Modal, ModalHeader, ModalBody, Row, Col, Label} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nclass CommentForm extends Component{\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          isModalOpen: false\r\n      }\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n      this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n      });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n            console.log('Current State is: ' + JSON.stringify(values));\r\n            alert('Current State is: ' + JSON.stringify(values));\r\n            // event.preventDefault();\r\n        }\r\n\r\nrender()\r\n{\r\n  return(\r\n    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n        <ModalBody>\r\n        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                <Col md={10}>\r\n                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                        placeholder=\"First Name\"\r\n                        className=\"form-control\"\r\n                        validators={{\r\n                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                        }}\r\n                         />\r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".firstname\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Required',\r\n                            minLength: 'Must be greater than 2 characters',\r\n                            maxLength: 'Must be 15 characters or less'\r\n                        }}\r\n                     />\r\n                </Col>\r\n            </Row>\r\n          </LocalForm>\r\n        </ModalBody>\r\n    </Modal>\r\n  );\r\n}\r\n}\r\n export default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}