{"ast":null,"code":"import*as ActionTypes from'./ActionTypes';import{baseUrl}from'../shared/baseUrl';export var addFeedback=function addFeedback(){return{type:ActionTypes.ADD_FEEDBACK};};export var postFeedback=function postFeedback(firstname,lastname,email,telnum,agree,contactType,message){return function(dispatch){var newFeedback={firstname:firstname,lastname:lastname,email:email,telnum:telnum,agree:agree,contactType:contactType,message:message};newFeedback.date=new Date().toISOString();return fetch(baseUrl+'feedback',{method:\"POST\",body:JSON.stringify(newFeedback),headers:{\"content-Type\":\"application/json\"},credentials:\"same-origin\"}).then(function(res){if(res.ok){return res;}else{var error=new Error('Error '+res.status+': '+res.statusText);error.response=res;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(res){console.log(res);alert(JSON.stringify(res));return dispatch(addFeedback());}).catch(function(error){console.log('post feedback',error.message);alert('Your feedback could not be sent\\nError: '+error.message);});};};export var addComment=function addComment(comment){return{type:ActionTypes.ADD_COMMENT,payload:comment};};export var postComment=function postComment(dishId,rating,author,comment){return function(dispatch){var newComment={dishId:dishId,rating:rating,author:author,comment:comment};newComment.date=new Date().toISOString();return fetch(baseUrl+'comments',{method:\"POST\",body:JSON.stringify(newComment),headers:{\"Content-Type\":\"application/json\"},credentials:\"same-origin\"}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){return dispatch(addComment(response));}).catch(function(error){console.log('post comments',error.message);alert('Your comment could not be posted\\nError: '+error.message);});};};export var fetchDishes=function fetchDishes(){return function(dispatch){dispatch(dishesLoading(true));return fetch(baseUrl+'dishes').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(dishes){return dispatch(addDishes(dishes));}).catch(function(error){return dispatch(dishesFailed(error.message));});};};export var dishesLoading=function dishesLoading(){return{type:ActionTypes.DISHES_LOADING};};export var dishesFailed=function dishesFailed(errmess){return{type:ActionTypes.DISHES_FAILED,payload:errmess};};export var addDishes=function addDishes(dishes){return{type:ActionTypes.ADD_DISHES,payload:dishes};};export var fetchComments=function fetchComments(){return function(dispatch){return fetch(baseUrl+'comments').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(comments){return dispatch(addComments(comments));}).catch(function(error){return dispatch(commentsFailed(error.message));});};};export var commentsFailed=function commentsFailed(errmess){return{type:ActionTypes.COMMENTS_FAILED,payload:errmess};};export var addComments=function addComments(comments){return{type:ActionTypes.ADD_COMMENTS,payload:comments};};export var fetchPromos=function fetchPromos(){return function(dispatch){dispatch(promosLoading());return fetch(baseUrl+'promotions').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(promos){return dispatch(addPromos(promos));}).catch(function(error){return dispatch(promosFailed(error.message));});};};export var promosLoading=function promosLoading(){return{type:ActionTypes.PROMOS_LOADING};};export var promosFailed=function promosFailed(errmess){return{type:ActionTypes.PROMOS_FAILED,payload:errmess};};export var addPromos=function addPromos(promos){return{type:ActionTypes.ADD_PROMOS,payload:promos};};export var fetchLeaders=function fetchLeaders(){return function(dispatch){dispatch(leadersLoading());return fetch(baseUrl+'leaders').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(leaders){return dispatch(addLeaders(leaders));}).catch(function(error){return dispatch(leadersFailed(error.message));});};};export var leadersLoading=function leadersLoading(){return{type:ActionTypes.LEADERS_LOADING};};export var leadersFailed=function leadersFailed(errmess){return{type:ActionTypes.LEADERS_FAILED,payload:errmess};};export var addLeaders=function addLeaders(leaders){return{type:ActionTypes.ADD_LEADERS,payload:leaders};};","map":{"version":3,"sources":["C:/Users/Deepak.Khairwal/HD/LENOVO/WEBSITES/React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addFeedback","type","ADD_FEEDBACK","postFeedback","firstname","lastname","email","telnum","agree","contactType","message","dispatch","newFeedback","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","res","ok","error","Error","status","statusText","response","json","console","log","alert","catch","addComment","comment","ADD_COMMENT","payload","postComment","dishId","rating","author","newComment","fetchDishes","dishesLoading","errmess","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addFeedback = () => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n})\r\n\r\nexport const postFeedback = (firstname, lastname, email, telnum, agree, contactType, message) =>\r\n    dispatch => {\r\n        const newFeedback = {\r\n            firstname: firstname,\r\n            lastname: lastname,\r\n            email: email,\r\n            telnum: telnum,\r\n            agree: agree,\r\n            contactType: contactType,\r\n            message: message,\r\n        }\r\n        newFeedback.date = new Date().toISOString();\r\n        return fetch(baseUrl + 'feedback', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newFeedback),\r\n            headers: {\r\n                \"content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"same-origin\"\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res\r\n                } else {\r\n                    var error = new Error('Error ' + res.status + ': ' + res.statusText);\r\n                    error.response = res;\r\n                    throw error;\r\n                }\r\n            },\r\n                error => {\r\n                    throw error;\r\n                })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                console.log(res);\r\n                alert(JSON.stringify(res));\r\n                return dispatch(addFeedback());\r\n            })\r\n            .catch(error => {\r\n                console.log('post feedback', error.message);\r\n                alert('Your feedback could not be sent\\nError: ' + error.message);\r\n            });\r\n    }\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n"]},"metadata":{},"sourceType":"module"}