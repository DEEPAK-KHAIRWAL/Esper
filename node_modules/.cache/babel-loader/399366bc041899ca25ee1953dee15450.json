{"ast":null,"code":"import*as ActionTypes from'./ActionTypes';import{baseUrlForDevice,baseUrlForGroup}from'../shared/baseUrl';export var fetchDevices=function fetchDevices(){return function(dispatch){dispatch(devicesLoading());return fetch(baseUrlForDevice,{method:\"GET\",headers:{'Authorization':'Bearer kfGaoX2xDXJLPK0OVAvYi45G5qS0I2'}}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(devices){return dispatch(addDevices(devices));}).catch(function(error){return dispatch(devicesFailed(error.message));});};};export var devicesLoading=function devicesLoading(){return{type:ActionTypes.DEVICES_LOADING};};export var devicesFailed=function devicesFailed(errmess){return{type:ActionTypes.DEVICES_FAILED,payload:errmess};};export var addDevices=function addDevices(devices){return{type:ActionTypes.ADD_DEVICES,payload:devices};};export var fetchGroups=function fetchGroups(){return function(dispatch){dispatch(groupsLoading());return fetch(baseUrlForGroup,{method:\"GET\",headers:{'Authorization':'Bearer kfGaoX2xDXJLPK0OVAvYi45G5qS0I2'}}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(groups){return dispatch(addGroups(groups));}).catch(function(error){return dispatch(groupsFailed(error.message));});};};export var groupsLoading=function groupsLoading(){return{type:ActionTypes.GROUPS_LOADING};};export var groupsFailed=function groupsFailed(errmess){return{type:ActionTypes.GROUPS_FAILED,payload:errmess};};export var addGroups=function addGroups(groups){return{type:ActionTypes.ADD_GROUPS,payload:groups};};","map":{"version":3,"sources":["C:/Users/Deepak.Khairwal/Downloads/Esper/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrlForDevice","baseUrlForGroup","fetchDevices","dispatch","devicesLoading","fetch","method","headers","then","response","ok","error","Error","status","statusText","errmess","message","json","devices","addDevices","catch","devicesFailed","type","DEVICES_LOADING","DEVICES_FAILED","payload","ADD_DEVICES","fetchGroups","groupsLoading","groups","addGroups","groupsFailed","GROUPS_LOADING","GROUPS_FAILED","ADD_GROUPS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrlForDevice, baseUrlForGroup } from '../shared/baseUrl';\r\n\r\n\r\nexport const fetchDevices = () => (dispatch) => {\r\n\r\n    dispatch(devicesLoading());\r\n\r\n    return fetch(baseUrlForDevice,{\r\n        method: \"GET\",\r\n        headers: {\r\n          'Authorization': 'Bearer kfGaoX2xDXJLPK0OVAvYi45G5qS0I2'\r\n        }})\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(devices => dispatch(addDevices(devices)))\r\n    .catch(error => dispatch(devicesFailed(error.message)));\r\n}\r\n\r\nexport const devicesLoading = () => ({\r\n    type: ActionTypes.DEVICES_LOADING\r\n});\r\n\r\nexport const devicesFailed = (errmess) => ({\r\n    type: ActionTypes.DEVICES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDevices = (devices) => ({\r\n    type: ActionTypes.ADD_DEVICES,\r\n    payload: devices\r\n});\r\n\r\n\r\nexport const fetchGroups = () => (dispatch) => {\r\n\r\n    dispatch(groupsLoading());\r\n\r\n    return fetch(baseUrlForGroup,{\r\n        method: \"GET\",\r\n        headers: {\r\n          'Authorization': 'Bearer kfGaoX2xDXJLPK0OVAvYi45G5qS0I2'\r\n        }})\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(groups => dispatch(addGroups(groups)))\r\n    .catch(error => dispatch(groupsFailed(error.message)));\r\n}\r\n\r\nexport const groupsLoading = () => ({\r\n    type: ActionTypes.GROUPS_LOADING\r\n});\r\n\r\nexport const groupsFailed = (errmess) => ({\r\n    type: ActionTypes.GROUPS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addGroups = (groups) => ({\r\n    type: ActionTypes.ADD_GROUPS,\r\n    payload: groups\r\n});\r\n"]},"metadata":{},"sourceType":"module"}