{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const leaders = (state = {\n  isLoading: true,\n  errMess: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      };\n\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'leaders').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: promos\n});","map":{"version":3,"sources":["C:/Users/Deepak.Khairwal/HD/LENOVO/WEBSITES/React/confusion/src/redux/leaders.js"],"names":["ActionTypes","leaders","state","isLoading","errMess","action","type","ADD_LEADERS","payload","LEADERS_LOADING","LEADERS_FAILED","fetchPromos","dispatch","promosLoading","fetch","baseUrl","then","response","ok","error","Error","status","statusText","errmess","message","json","promos","addPromos","catch","promosFailed"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAI;AAAEC,EAAAA,SAAS,EAAE,IAAb;AACOC,EAAAA,OAAO,EAAE,IADhB;AAEOH,EAAAA,OAAO,EAAC;AAFf,CAAV,EAE8BI,MAF9B,KAEyC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,WAAjB;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CH,QAAAA,OAAO,EAAEI,MAAM,CAACG;AAA5D,OAAP;;AAEA,SAAKR,WAAW,CAACS,eAAjB;AACI,aAAO,EAAC,GAAGP,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CH,QAAAA,OAAO,EAAE;AAApD,OAAP;;AAEJ,SAAKD,WAAW,CAACU,cAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAA7C,OAAP;;AAEJ;AACE,aAAON,KAAP;AAXN;AAaH,CAhBM;AAmBP,OAAO,MAAMS,WAAW,GAAG,MAAOC,QAAD,IAAc;AAE3CA,EAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AAEA,SAAOC,KAAK,CAACC,OAAO,GAAG,SAAX,CAAL,CACNC,IADM,CACDC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAP;AACD,KAFD,MAEO;AACL,UAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWH,QAAQ,CAACI,MAApB,GAA6B,IAA7B,GAAoCJ,QAAQ,CAACK,UAAvD,CAAZ;AACAH,MAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,YAAME,KAAN;AACD;AACF,GATI,EAULA,KAAK,IAAI;AACH,QAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;AACA,UAAMD,OAAN;AACL,GAbI,EAcNP,IAdM,CAcDC,QAAQ,IAAIA,QAAQ,CAACQ,IAAT,EAdX,EAeNT,IAfM,CAeDU,MAAM,IAAId,QAAQ,CAACe,SAAS,CAACD,MAAD,CAAV,CAfjB,EAgBNE,KAhBM,CAgBAT,KAAK,IAAIP,QAAQ,CAACiB,YAAY,CAACV,KAAK,CAACK,OAAP,CAAb,CAhBjB,CAAP;AAiBH,CArBM;AAuBP,OAAO,MAAMX,aAAa,GAAG,OAAO;AAChCP,EAAAA,IAAI,EAAEN,WAAW,CAACS;AADc,CAAP,CAAtB;AAIP,OAAO,MAAMoB,YAAY,GAAIN,OAAD,KAAc;AACtCjB,EAAAA,IAAI,EAAEN,WAAW,CAACU,cADoB;AAEtCF,EAAAA,OAAO,EAAEe;AAF6B,CAAd,CAArB;AAKP,OAAO,MAAMI,SAAS,GAAID,MAAD,KAAa;AAClCpB,EAAAA,IAAI,EAAEN,WAAW,CAACO,WADgB;AAElCC,EAAAA,OAAO,EAAEkB;AAFyB,CAAb,CAAlB","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: promos\r\n});\r\n"]},"metadata":{},"sourceType":"module"}